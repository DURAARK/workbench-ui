// Layouts
// =======

html,
body,
.l-canvas,
.l-content,
.l-follow,
.l-sitenav {
  height: 100%;
}

.l-canvas {
  position: relative;
  overflow: hidden;
}

.l-content-header,
.l-content,
.l-follow,
.l-sitenav {
  position: fixed;
  top: 0;
  bottom: 0;
}

.l-sitenav {
  z-index: 20;
  width: rhythm(11);

  &.is-collapsed {
    width: rhythm(2);
  }
}

.l-follow {
  background-color: rgba(green, 0.25);
  z-index: 20;
  right: 0;
  width: rhythm(14);

  &.is-collapsed {
    width: 0;
    padding: 0;

    *:not(.c-collapsible-toggle) {
      display: none;
    }
  }
}

.l-content-header {
  z-index: 20;
  width: calc(100% - #{rhythm(11)});
  height: rhythm(5);
  margin-left: rhythm(11);
  margin-right: rhythm(14);
  padding: rhythm(2);
  padding-left: rhythm(1.5);
}

.l-content {
  @include cf;
  width: calc(100% - #{rhythm(11)});
  margin-top: rhythm(5);
  margin-left: rhythm(11);
  padding-left: rhythm(1);
  padding-right: rhythm(1);
  padding-bottom: rhythm(5); // FIXXME: workaround for scrollbar not scrolling down enough
  overflow-y: auto;

  &.has-nav-collapsed {
    margin-left: rhythm(2);
    width: calc(100% - #{rhythm(2)} - #{rhythm(14)});
  }

  &.has-follow-collapsed {
    margin-right: 0;
    width: calc(100% - #{rhythm(11)});
  }

  &.has-nav-collapsed.has-follow-collapsed {
    width: calc(100% - #{rhythm(2)});
  }
}

.l-games {
  @include container;
}

.l-game {
  @include gallery(1);
  $games: map-get($contexts, games);
  $keys: map-keys($games);

  @each $eq in $keys {
    [data-eq-state="#{$eq}"] & {
      @include with-context(games, $eq) {
        @include gallery(1);
        margin-bottom: gutter();
      }
    }
  }
}
